<?php

/**
 * Implementation of hook_help().
 */
function simpleshare_help($path, $arg) {
  if ($path == 'admin/settings/simpleshare') {
    return t('Choose share methods that should be available to users. For actually showing a share link, configure workflow settings of content types or use Views to add a "Simple Share link" field to your listing.');
  }
}

/**
 * Implementation of hook_menu().
 */
function simpleshare_menu() {
  $items = array();
  $items['simpleshare'] = array(
    'type' => MENU_CALLBACK,
    'page callback' => 'simpleshare_service_links',
    'page arguments' => array(),
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['admin/settings/simpleshare'] = array(
    'title' => 'Simpleshare',
    'description' => 'Control simpleshare sharing methods.',
    'type' => MENU_NORMAL_ITEM,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('simpleshare_admin_settings'),
    'access callback' => 'user_access',
    'access arguments' => array('administer site configuration'),
    'file' => 'simpleshare.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function simpleshare_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'simpleshare') .'/views',
  );
}

/**
 * Implementation of hook_form_alter().
 */
function simpleshare_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'node_type_form') {
    $form['workflow']['simpleshare_enabled'] = array(
      '#type' => 'radios',
      '#title' => t('Simple Share'),
      '#description' => t('If checked, offers Share link on full node views. Choose which share methods to expose on the !settings_form.', array('!admin_form' => l(t('Simple Share settings form'), 'admin/settings/simpleshare'))),
      '#options' => array(0 => t('Disabled'), 1 => t('Enabled')),
      '#default_value' => variable_get('simpleshare_enabled_'. $form['#node_type']->type, 0),
    );
  }
}

/**
 * Implementation of hook_link().
 */
function simpleshare_link($type, $object, $teaser = FALSE) {
  if ($type == 'node' && !$teaser && variable_get('simpleshare_enabled_'. $object->type, 0)) {
    drupal_add_js(drupal_get_path('module', 'simpleshare') .'/simpleshare.js');
    drupal_add_css(drupal_get_path('module', 'simpleshare') .'/simpleshare.css');
    return array(
      'simpleshare' => array(
        'title' => t('Share'),
        'href' => "node/{$object->nid}",
        'absolute' => TRUE,
        'attributes' => array(
          'title' => check_plain($object->title),
          'class' => 'simpleshare',
        ),
      ),
    );
  }
}

/**
 * AJAX callback for generating service links.
 */
function simpleshare_service_links() {
  if (isset($_GET['url'], $_GET['title'])) {
    $title = $_GET['title'];
    $url = $_GET['url'];
    $short_url = _simpleshare_short_url($_GET['url']);
    $full = "{$title} ({$short_url})";
    $html = $title .' ('. l($short_url, $short_url, array('absolute' => TRUE)) .')';

    $links = array();
    $methods = variable_get('simpleshare_methods', simpleshare_methods());
    if ($methods['twitter']) {
      $links['twitter'] = array(
        'title' => t('Twitter'),
        'href' => 'http://twitter.com',
        'query' => 'status='. urlencode($full),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['facebook']) {
      $links['facebook'] = array(
        'title' => t('Facebook'),
        'href' => 'http://facebook.com/share.php',
        'query' => 'u='. urlencode($url),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['myspace']) {
      $links['myspace'] = array(
        'title' => t('MySpace'),
        'href' => 'http://www.myspace.com/index.cfm',
        'query' => 'fuseaction=postto&t='. urlencode($title) .
                   '&c='. urlencode($full) .
                   '&u='. urlencode($url),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['delicious']) {
      $links['delicious'] = array(
        'title' => t('Delicious'),
        'href' => 'http://delicious.com/save',
        'query' => 'v=5&noui&jump=close&url='. urlencode($url) .
                   '&title='. urlencode($title),
        'attributes' => array('target' => '_blank'),
      );
    }
    if ($methods['email']) {
      $links['email'] = array(
        'title' => t('E-mail'),
        'href' => 'mailto:',
        // @TODO: test with more mail clients. Firefox -> Gmail integration
        // does not like urlencode()'d strings.
        'query' => array('Subject' => $title, 'Body' => $full),
        'attributes' => array('target' => '_blank'),
      );
    }
    $links = theme('links', $links);
    print theme('simpleshare_popup', $links, $html);
  }
  exit;
}

/**
 * Enumerate all available methods.
 *
 * Use variable_get('simpleshare_methods', array_keys(simpleshare_methods())) to
 * get the keys of all enabled methods.
 */
function simpleshare_methods() {
  return array(
    'email' => t('Email'),
    'delicious' => t('Delicious'),
    'facebook' => t('Facebook'),
    'twitter' => t('Twitter'),
    'myspace' => t('MySpace'),
  );
}

/**
 * Push URL through a URL shortening service.
 */
function _simpleshare_short_url($url) {
  // @TODO make this configurable
  // $api = "http://is.gd/api.php?longurl={$url}";
  $api = "http://tinyurl.com/api-create.php?url={$url}";

  if (function_exists('curl_init')) {
    $session = curl_init();
    curl_setopt($session, CURLOPT_URL, $api);
    curl_setopt($session, CURLOPT_RETURNTRANSFER, 1);
    $url = curl_exec($session);
    curl_close($session);
  }
  return $url;
}

/**
 * Implementation of hook_theme().
 */
function simpleshare_theme() {
  return array('simpleshare_popup' => array());
}

/**
 * Theme a share popup box.
 */
function theme_simpleshare_popup($service_links, $text) {
  $output = "<div class='simpleshare-popup clear-block'>";
  $output .= "<span class='close'>". t('Close') ."</span>";
  $output .= "<h2>{$text}</h2>";
  $output .= $service_links;
  $output .= "</div>";
  return $output;
}
